#lang info
(define collection "drracket-zenburn")
(define deps '("base"))

(define pkg-desc "Description Here")
(define version "0.0")
(define pkg-authors '(andrei))

(define zenburn-fg+1     #(#xFF #xFF #xEF))
(define zenburn-fg       #(#xDC #xDC #xCC))
(define zenburn-fg-1     #(#x65 #x65 #x55))
(define zenburn-bg-2     #(#x00 #x00 #x00))
(define zenburn-bg-1     #(#x2B #x2B #x2B))
(define zenburn-bg-05    #(#x38 #x38 #x38))
(define zenburn-bg       #(#x3F #x3F #x3F))
(define zenburn-bg+05    #(#x49 #x49 #x49))
(define zenburn-bg+1     #(#x4F #x4F #x4F))
(define zenburn-bg+2     #(#x5F #x5F #x5F))
(define zenburn-bg+3     #(#x6F #x6F #x6F))
(define zenburn-red+1    #(#xDC #xA3 #xA3))
(define zenburn-red      #(#xCC #x93 #x93))
(define zenburn-red-1    #(#xBC #x83 #x83))
(define zenburn-red-2    #(#xAC #x73 #x73))
(define zenburn-red-3    #(#x9C #x63 #x63))
(define zenburn-red-4    #(#x8C #x53 #x53))
(define zenburn-orange   #(#xDF #xAF #x8F))
(define zenburn-yellow   #(#xF0 #xDF #xAF))
(define zenburn-yellow-1 #(#xE0 #xCF #x9F))
(define zenburn-yellow-2 #(#xD0 #xBF #x8F))
(define zenburn-green-1  #(#x5F #x7F #x5F))
(define zenburn-green    #(#x7F #x9F #x7F))
(define zenburn-green+1  #(#x8F #xB2 #x8F))
(define zenburn-green+2  #(#x9F #xC5 #x9F))
(define zenburn-green+3  #(#xAF #xD8 #xAF))
(define zenburn-green+4  #(#xBF #xEB #xBF))
(define zenburn-cyan     #(#x93 #xE0 #xE3))
(define zenburn-blue+1   #(#x94 #xBF #xF3))
(define zenburn-blue     #(#x8C #xD0 #xD3))
(define zenburn-blue-1   #(#x7C #xB8 #xBB))
(define zenburn-blue-2   #(#x6C #xA0 #xA3))
(define zenburn-blue-3   #(#x5C #x88 #x8B))
(define zenburn-blue-4   #(#x4C #x70 #x73))
(define zenburn-blue-5   #(#x36 #x60 #x60))
(define zenburn-magenta  #(#xDC #x8C #xC3))

(define framework:color-schemes
  `(#hash((name . "Zenburn")
          (colors
           .
           ((framework:basic-canvas-background     ,zenburn-bg)
            (framework:default-text-color          ,zenburn-fg)
            (framework:paren-match-color           ,zenburn-bg+1)
            (framework:misspelled-text-color       ,zenburn-orange)
            (framework:syntax-color:scheme:comment ,zenburn-green)
            (framework:syntax-color:scheme:constant ,zenburn-green+4)
            (framework:syntax-color:scheme:error   ,zenburn-red+1 bold)
            (framework:syntax-color:scheme:hash-colon-keyword ,zenburn-yellow)
            (framework:syntax-color:scheme:keyword ,zenburn-yellow-1)
            (framework:syntax-color:scheme:string ,zenburn-red-1)
            (framework:syntax-color:scheme:other ,zenburn-green-1)
            (framework:syntax-color:scheme:parenthesis ,zenburn-fg-1)
            (framework:syntax-color:scheme:symbol ,zenburn-fg)
            (drracket:read-eval-print-loop:error-color ,zenburn-red+1 bold)
            (drracket:read-eval-print-loop:out-color ,zenburn-magenta)
            (drracket:read-eval-print-loop:value-color ,zenburn-blue)
            (drracket:check-syntax:both-obligation-style-pref ,zenburn-green)
            (drracket:check-syntax:free-variable ,zenburn-red-1)
            (drracket:check-syntax:imported ,zenburn-cyan)
            (drracket:check-syntax:lexically-bound ,zenburn-blue-1)
            (drracket:check-syntax:my-obligation-style-pref ,zenburn-orange)
            (drracket:check-syntax:set!d ,zenburn-orange)
            (drracket:check-syntax:their-obligation-style-pref ,zenburn-cyan)
            (drracket:check-syntax:unk-obligation-style-pref ,zenburn-fg-1)
            (drracket:check-syntax:unused-require ,zenburn-red))))))
